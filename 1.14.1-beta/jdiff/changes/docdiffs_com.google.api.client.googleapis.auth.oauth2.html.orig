<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Frameset//EN""http://www.w3.org/TR/REC-html40/frameset.dtd">
<HTML>
<HEAD>
<meta name="generator" content="JDiff v1.1.1">
<!-- Generated by the JDiff Javadoc doclet -->
<!-- (http://www.jdiff.org) -->
<meta name="description" content="JDiff is a Javadoc doclet which generates an HTML report of all the packages, classes, constructors, methods, and fields which have been removed, added or changed in any way, including their documentation, when two APIs are compared.">
<meta name="keywords" content="diff, jdiff, javadiff, java diff, java difference, API difference, difference between two APIs, API diff, Javadoc, doclet">
<LINK REL="stylesheet" TYPE="text/css" HREF="../stylesheet-jdiff.css" TITLE="Style">
<TITLE>
com.google.api.client.googleapis.auth.oauth2 Documentation Differences
</TITLE>
</HEAD>
<BODY>
<!-- Start of nav bar -->
<TABLE summary="Navigation bar" BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
  <TABLE summary="Navigation bar" BORDER="0" CELLPADDING="0" CELLSPACING="3">
    <TR ALIGN="center" VALIGN="top">
      <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1"> <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/package-summary.html" target="_top"><FONT CLASS="NavBarFont1"><B><tt>Google API Client Library for Java 1.14.1-beta</tt></B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1"> <A HREF="changes-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1"> &nbsp;<FONT CLASS="NavBarFont1">Package</FONT>&nbsp;</TD>
      <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1"> &nbsp;<FONT CLASS="NavBarFont1">Class</FONT>&nbsp;</TD>
      <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1"> <A HREF="docdiffs_index.html"><FONT CLASS="NavBarFont1"><B>Text Changes</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1"> <A HREF="jdiff_statistics.html"><FONT CLASS="NavBarFont1"><B>Statistics</B></FONT></A>&nbsp;</TD>
      <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1"> <A HREF="jdiff_help.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
    </TR>
  </TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM><b>Generated by<br><a href="http://www.jdiff.org" class="staysblack" target="_top">JDiff</a></b></EM></TD>
</TR>
<TR>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="docdiffs_com.google.api.client.googleapis.html"><B>PREV PACKAGE</B></A>  &nbsp;
  &nbsp;<A HREF="docdiffs_com.google.api.client.googleapis.batch.html"><B>NEXT PACKAGE</B></A>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <A HREF="../changes.html" TARGET="_top"><B>FRAMES</B></A>  &nbsp;
  &nbsp;<A HREF="docdiffs_com.google.api.client.googleapis.auth.oauth2.html" TARGET="_top"><B>NO FRAMES</B></A></FONT></TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell2">&nbsp;</TD>
</TR>
</TABLE>
<HR>
<!-- End of nav bar -->
<h2>
com.google.api.client.googleapis.auth.oauth2 Documentation Differences
</h2>

<blockquote>
This file contains all the changes in documentation in the package <code>com.google.api.client.googleapis.auth.oauth2</code> as colored differences.
Deletions are shown <strike>like this</strike>, and
additions are shown <span style="background: #FFFF00">like this</span>.
</blockquote>
<blockquote>
If no deletions or additions are shown in an entry, the HTML tags will be what has changed. The <i>new</i> HTML tags are shown in the differences. 
If no documentation existed, and then some was added in a later version, this change is noted in the appropriate class pages of differences, but the change is not shown on this page. Only changes in existing text are shown here. 
Similarly, documentation which was inherited from another class or interface is not shown here.
</blockquote>
<blockquote>
 Note that an HTML error in the new documentation may cause the display of other documentation changes to be presented incorrectly. For instance, failure to close a &lt;code&gt; tag will cause all subsequent paragraphs to be displayed differently.
</blockquote>
<hr>

<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow.ctor(AccessMethod, HttpTransport, JsonFactory, GenericUrl, HttpExecuteInterceptor, String, String, CredentialStore, HttpRequestInitializer, String, String, String)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow.html" class="hiddenlink">Class <b>GoogleAuthorizationCodeFlow</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow.html#com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow.ctor_changed(AccessMethod, HttpTransport, JsonFactory, GenericUrl, HttpExecuteInterceptor, java.lang.String, java.lang.String, CredentialStore, HttpRequestInitializer, java.lang.String, java.lang.String, java.lang.String)" class="hiddenlink">constructor <b>GoogleAuthorizationCodeFlow(AccessMethod, HttpTransport, JsonFactory, GenericUrl, HttpExecuteInterceptor, String, String, CredentialStore, HttpRequestInitializer, String, String, String)</b></a><br><br><blockquote>@param method method of presenting the access token to the resource server (for example
        <A HREF="../Google API Client Library for Java 1.14.1-beta/BearerToken.html#authorizationHeaderAccessMethod"><TT>BearerToken.authorizationHeaderAccessMethod</TT></A>)
 @param transport HTTP transport
 @param jsonFactory JSON factory
 @param tokenServerUrl token server URL
 @param clientAuthentication client authentication or {@code null} for none (see
        <A HREF="../Google API Client Library for Java 1.14.1-beta/TokenRequest.html#setClientAuthentication(HttpExecuteInterceptor)"><TT>TokenRequest.setClientAuthentication(HttpExecuteInterceptor)</TT></A>)
 @param clientId client identifier
 @param authorizationServerEncodedUrl authorization server encoded URL
 @param credentialStore credential persistence store or {@code null} for none
 @param requestInitializer HTTP request initializer or {@code null} for none
 @param scopes space-separated list of scopes or {@code null} for none
 @param accessType access type ({@code "online"} to request online access or {@code "offline"}
        to request offline access) or {@code null} for the default behavior
 @param approvalPrompt Prompt for consent behavior ({@code "auto"} to request auto-approval or
        {@code "force"} to force the approval UI to show) or {@code null} for the default
        <strike>behavior</strike><span style="background: #FFFF00">behavior
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#GoogleAuthorizationCodeFlow(Builder)"><TT>.GoogleAuthorizationCodeFlow(Builder)</TT></A></span></blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleCredential.ctor(AccessMethod, HttpTransport, JsonFactory, String, HttpExecuteInterceptor, HttpRequestInitializer, List&lt;CredentialRefreshListener&gt;, String, String, PrivateKey, String)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleCredential.html" class="hiddenlink">Class <b>GoogleCredential</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleCredential.html#com.google.api.client.googleapis.auth.oauth2.GoogleCredential.ctor_changed(AccessMethod, HttpTransport, JsonFactory, java.lang.String, HttpExecuteInterceptor, HttpRequestInitializer, java.util.List<CredentialRefreshListener>, java.lang.String, java.lang.String, java.security.PrivateKey, java.lang.String)" class="hiddenlink">constructor <b>GoogleCredential(AccessMethod, HttpTransport, JsonFactory, String, HttpExecuteInterceptor, HttpRequestInitializer, List&lt;CredentialRefreshListener&gt;, String, String, PrivateKey, String)</b></a><br><br><blockquote>@param method method of presenting the access token to the resource server (for example
        <A HREF="../Google API Client Library for Java 1.14.1-beta/BearerToken.html#authorizationHeaderAccessMethod"><TT>BearerToken.authorizationHeaderAccessMethod</TT></A>)
 @param transport HTTP transport for executing refresh token request or {@code null} if not
        refreshing tokens
 @param jsonFactory JSON factory to use for parsing response for refresh token request or
        {@code null} if not refreshing tokens
 @param tokenServerEncodedUrl encoded token server URL or {@code null} if not refreshing tokens
 @param clientAuthentication client authentication or {@code null} for none (see
        <A HREF="../Google API Client Library for Java 1.14.1-beta/TokenRequest.html#setClientAuthentication(HttpExecuteInterceptor)"><TT>TokenRequest.setClientAuthentication(HttpExecuteInterceptor)</TT></A>)
 @param requestInitializer HTTP request initializer for refresh token requests to the token
        server or {@code null} for none.
 @param refreshListeners listeners for refresh token results or {@code null} for none
 @param serviceAccountId service account ID (typically an e-mail address) or {@code null} if not
        using the service account flow
 @param serviceAccountScopes space-separated OAuth scopes to use with the the service account
        flow or {@code null} if not using the service account flow
 @param serviceAccountPrivateKey private key to use with the the service account flow or
        {@code null} if not using the service account flow
 @param serviceAccountUser email address of the user the application is trying to impersonate in
        the service account flow or {@code null} for none or if not using the service account
        <strike>flow</strike><span style="background: #FFFF00">flow
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#GoogleCredential(Builder)"><TT>.GoogleCredential(Builder)</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleCredential.ctor(AccessMethod, HttpTransport, JsonFactory, String, HttpExecuteInterceptor, HttpRequestInitializer, List&lt;CredentialRefreshListener&gt;, String, String, PrivateKey, String, Clock)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleCredential.html" class="hiddenlink">Class <b>GoogleCredential</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleCredential.html#com.google.api.client.googleapis.auth.oauth2.GoogleCredential.ctor_changed(AccessMethod, HttpTransport, JsonFactory, java.lang.String, HttpExecuteInterceptor, HttpRequestInitializer, java.util.List<CredentialRefreshListener>, java.lang.String, java.lang.String, java.security.PrivateKey, java.lang.String, Clock)" class="hiddenlink">constructor <b>GoogleCredential(AccessMethod, HttpTransport, JsonFactory, String, HttpExecuteInterceptor, HttpRequestInitializer, List&lt;CredentialRefreshListener&gt;, String, String, PrivateKey, String, Clock)</b></a><br><br><blockquote>@param method method of presenting the access token to the resource server (for example
        <A HREF="../Google API Client Library for Java 1.14.1-beta/BearerToken.html#authorizationHeaderAccessMethod"><TT>BearerToken.authorizationHeaderAccessMethod</TT></A>)
 @param transport HTTP transport for executing refresh token request or {@code null} if not
        refreshing tokens
 @param jsonFactory JSON factory to use for parsing response for refresh token request or
        {@code null} if not refreshing tokens
 @param tokenServerEncodedUrl encoded token server URL or {@code null} if not refreshing tokens
 @param clientAuthentication client authentication or {@code null} for none (see
        <A HREF="../Google API Client Library for Java 1.14.1-beta/TokenRequest.html#setClientAuthentication(HttpExecuteInterceptor)"><TT>TokenRequest.setClientAuthentication(HttpExecuteInterceptor)</TT></A>)
 @param requestInitializer HTTP request initializer for refresh token requests to the token
        server or {@code null} for none.
 @param refreshListeners listeners for refresh token results or {@code null} for none
 @param serviceAccountId service account ID (typically an e-mail address) or {@code null} if not
        using the service account flow
 @param serviceAccountScopes space-separated OAuth scopes to use with the the service account
        flow or {@code null} if not using the service account flow
 @param serviceAccountPrivateKey private key to use with the the service account flow or
        {@code null} if not using the service account flow
 @param serviceAccountUser email address of the user the application is trying to impersonate in
        the service account flow or {@code null} for none or if not using the service account
        flow
 @param clock The clock to use for expiration check
 @since 1.<strike>9</strike><span style="background: #FFFF00">9
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#GoogleCredential(Builder)"><TT>.GoogleCredential(Builder)</TT></A></span></blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken!class"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.html" class="hiddenlink">Class <b>GoogleIdToken</b></a><br><br><blockquote>Google ID tokens.

 <p>
 Google ID tokens contain useful information <strike>such</strike><span style="background: #FFFF00">about</span> <strike>as </strike>the <strike>obfuscated
</strike><span style="background: #FFFF00">authorized</span> <strike>Google</strike><span style="background: #FFFF00">end</span> user<strike> ID</strike>. Google ID tokens <strike>are</strike><span style="background: #FFFF00">are
</span> signed and the signature must be verified <strike>using
</strike><span style="background: #FFFF00">using</span> <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/.html#verify(GoogleIdTokenVerifier)"><TT>.verify(GoogleIdTokenVerifier)</TT></A><strike>,</strike><span style="background: #FFFF00">.
 </p>

</span> <strike>which</strike><p><span style="background: #FFFF00">
 Implementation</span> <strike>also checks</strike><span style="background: #FFFF00">is not</span> <strike>that</strike><span style="background: #FFFF00">thread-safe.
</span> <strike>your</strike></p><span style="background: #FFFF00">

</span> <strike>application's</strike><p><span style="background: #FFFF00">
</span> <strike>client</strike><span style="background: #FFFF00">Upgrade</span> <strike>ID</strike><span style="background: #FFFF00">warning:</span> <strike>is
 the intended audience</strike><span style="background: #FFFF00">in prior version 1</span>.<strike>
</strike><span style="background: #FFFF00">13</span> <strike>

</strike><span style="background: #FFFF00">this</span> <strike>
</strike><span style="background: #FFFF00">extended
</span> <strike>Implementation</strike><A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/com/google/api/client/auth/jsontoken/JsonWebSignature.html"><TT><span style="background: #FFFF00">com.google.api.client.auth.jsontoken.JsonWebSignature</TT></A>,</span> <strike>is not</strike><span style="background: #FFFF00">but starting</span> <strike>thread-safe</strike><span style="background: #FFFF00">with version 1.14 it
 now extends <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/IdToken.html"><TT>IdToken</TT></A></span>.
 </p>

 @since 1.7
 @author Yaniv Inbar</blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload!class"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload.html" class="hiddenlink">Class <b>GoogleIdToken.Payload</b></a><br><br><blockquote>Google ID token payload.<span style="background: #FFFF00">

 <p>
 Upgrade warning: in prior version 1.13 this extended
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/Payload/com/google/api/client/auth/jsontoken/JsonWebSignature/Payload.html"><TT>com.google.api.client.auth.jsontoken.JsonWebSignature.Payload</TT></A>, but starting with
 version 1.14 it now extends <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdToken/Payload/IdToken/Payload.html"><TT>IdToken.Payload</TT></A>.
 </p></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload.ctor(Clock)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload.html" class="hiddenlink">Class <b>GoogleIdToken.Payload</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdToken.Payload.ctor_changed(Clock)" class="hiddenlink">constructor <b>GoogleIdToken.Payload(Clock)</b></a><br><br><blockquote>Constructs a new Payload and uses the specified <A HREF="../Google API Client Library for Java 1.14.1-beta/Clock.html"><TT>Clock</TT></A>.
 @param clock Clock to use for expiration checks.
 @since 1.<strike>9</strike><span style="background: #FFFF00">9
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#Payload()"><TT>.Payload()</TT></A> instead</span></blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier!class"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier</b></a><br><br><blockquote>Thread-safe Google ID token verifier.

 <p>
 The public keys are loaded Google's public certificate endpoint at
 {@code "https://www.googleapis.com/oauth2/v1/certs"}. The public keys are cached in this instance
 of <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/GoogleIdTokenVerifier.html"><TT>GoogleIdTokenVerifier</TT></A>. Therefore, for maximum efficiency, applications should use a
 single globally-shared instance of the <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/GoogleIdTokenVerifier.html"><TT>GoogleIdTokenVerifier</TT></A>. Use
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/.html#verify(GoogleIdToken)"><TT>.verify(GoogleIdToken)</TT></A> <strike>or</strike><span style="background: #FFFF00">to verify a Google ID token,</span> <span style="background: #FFFF00">and then
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleIdTokenVerifier/GoogleIdToken.html#verifyAudience"></span><TT>GoogleIdToken.<strike>verify(GoogleIdTokenVerifier)</strike><span style="background: #FFFF00">verifyAudience</span></TT></A> to verify <strike>a
 Google</strike><span style="background: #FFFF00">the client</span> ID<strike> token</strike>.
 </p>

 <p>
 Samples usage:
 </p>

 <pre>
  public static GoogleIdTokenVerifier verifier;

  public static void initVerifier(
      HttpTransport transport, JsonFactory jsonFactory, String clientId) {
    verifier = new GoogleIdTokenVerifier.Builder(transport, jsonFactory)
        .setClientId(clientId)
        .build();
  }

  public static boolean verifyToken(GoogleIdToken idToken)
      throws GeneralSecurityException, IOException {
    return verifier.verify(idToken);
  }
 </pre>
 @since 1.7</blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.dmethod.getClientIds()"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier.Builder</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.getClientIds_changed()" class="hiddenlink">Set&lt;String&gt; <b>getClientIds()</b></a><br><br><blockquote>Returns the set of client IDs.<span style="background: #FFFF00">

 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdToken.html#verifyAudience"><TT>GoogleIdToken.verifyAudience</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.dmethod.setClientIds(Iterable&lt;String&gt;)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier.Builder</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.setClientIds_changed(java.lang.Iterable<java.lang.String>)" class="hiddenlink">Builder <b>setClientIds(Iterable&lt;String&gt;)</b></a><br><br><blockquote>Sets a list of client IDs.

 <p>
 Overriding is only supported for the purpose of calling the super implementation and changing
 the return type, but nothing else.
 </p><span style="background: #FFFF00">

 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdToken.html#verifyAudience"><TT>GoogleIdToken.verifyAudience</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.dmethod.setClientIds(String[])"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier.Builder</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.Builder.setClientIds_changed(java.lang.String[])" class="hiddenlink">Builder <b>setClientIds(String[])</b></a><br><br><blockquote>Sets a list of client IDs.

 <p>
 Overriding is only supported for the purpose of calling the super implementation and changing
 the return type, but nothing else.
 </p><span style="background: #FFFF00">
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdToken.html#verifyAudience"><TT>GoogleIdToken.verifyAudience</TT></A></span></blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.ctor(Set&lt;String&gt;, HttpTransport, JsonFactory)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.ctor_changed(java.util.Set<java.lang.String>, HttpTransport, JsonFactory)" class="hiddenlink">constructor <b>GoogleIdTokenVerifier(Set&lt;String&gt;, HttpTransport, JsonFactory)</b></a><br><br><blockquote>Construct the <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdTokenVerifier.html"><TT>GoogleIdTokenVerifier</TT></A>.

 @param clientIds set of client IDs or {@code null} for none
 @param transport HTTP transport
 @param jsonFactory JSON factory
 @since 1.<strike>9</strike><span style="background: #FFFF00">9
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#GoogleIdTokenVerifier(Builder)"><TT>.GoogleIdTokenVerifier(Builder)</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.ctor(Set&lt;String&gt;, HttpTransport, JsonFactory, Clock)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.ctor_changed(java.util.Set<java.lang.String>, HttpTransport, JsonFactory, Clock)" class="hiddenlink">constructor <b>GoogleIdTokenVerifier(Set&lt;String&gt;, HttpTransport, JsonFactory, Clock)</b></a><br><br><blockquote>Construct the <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdTokenVerifier.html"><TT>GoogleIdTokenVerifier</TT></A>.

 @param clientIds set of client IDs or {@code null} for none
 @param transport HTTP transport
 @param jsonFactory JSON factory
 @param clock Clock for expiration checks
 @since 1.<strike>9</strike><span style="background: #FFFF00">9
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#GoogleIdTokenVerifier(Builder)"><TT>.GoogleIdTokenVerifier(Builder)</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.dmethod.getClientIds()"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.getClientIds_changed()" class="hiddenlink">Set&lt;String&gt; <b>getClientIds()</b></a><br><br><blockquote>Returns the set of client IDs.

 @since 1.<strike>9</strike><span style="background: #FFFF00">9
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdToken.html#verifyAudience"><TT>GoogleIdToken.verifyAudience</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.dmethod.verify(GoogleIdToken, String)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.verify_changed(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken, java.lang.String)" class="hiddenlink">boolean <b>verify(GoogleIdToken, String)</b></a><br><br><blockquote>Verifies that the given ID token is valid, using the given client ID.

 It verifies:

 <ul>
 <li>The RS256 signature, which uses RSA and SHA-256 based on the public keys downloaded from
 the public certificate endpoint.</li>
 <li>The current time against the issued at and expiration time (allowing for a 5 minute clock
 skew).</li>
 <li>The issuer is {@code "accounts.google.com"}.</li>
 <li>The audience and issuee match the client ID (skipped if {@code clientId} is {@code null}<span style="background: #FFFF00">)</span>.
 </li>
 <strike>
 </strike></ul>

 @param idToken Google ID token
 @param clientId client ID or {@code null} to skip checking it
 @return {@code true} if verified successfully or {@code false} if failed
 @since 1.<strike>8</strike><span style="background: #FFFF00">8
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#verify(GoogleIdToken)"><TT>.verify(GoogleIdToken)</TT></A></span></blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.dmethod.verify(Set&lt;String&gt;, GoogleIdToken)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html" class="hiddenlink">Class <b>GoogleIdTokenVerifier</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.html#com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier.verify_changed(java.util.Set<java.lang.String>, com.google.api.client.googleapis.auth.oauth2.GoogleIdToken)" class="hiddenlink">boolean <b>verify(Set&lt;String&gt;, GoogleIdToken)</b></a><br><br><blockquote>Verifies that the given ID token is valid, using the given set of client IDs.

 It verifies:

 <ul>
 <li>The RS256 signature, which uses RSA and SHA-256 based on the public keys downloaded from
 the public certificate endpoint.</li>
 <li>The current time against the issued at and expiration time (allowing for a 5 minute clock
 skew).</li>
 <li>The issuer is {@code "accounts.google.com"}.</li>
 <li>The audience and issuee match one of the client IDs (skipped if {@code clientIds} is
 {@code null}.</li>
 <li>
 </ul>

 @param idToken Google ID token
 @param clientIds set of client IDs
 @return {@code true} if verified successfully or {@code false} if failed
 @since 1.<strike>9</strike><span style="background: #FFFF00">9
 @deprecated (scheduled to be removed in 1.15) Use <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#verify(GoogleIdToken)"><TT>.verify(GoogleIdToken)</TT></A></span></blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest!class"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest.html" class="hiddenlink">Class <b>GoogleRefreshTokenRequest</b></a><br><br><blockquote>Google-specific implementation of the OAuth 2.0 request to refresh an access token using a
 refresh token as specified in <strike>Refreshing</strike><a href="http://tools.ietf.org/html/rfc6749#section-6"><span style="background: #FFFF00">Refreshing
</span> an <strike>Access
</strike><span style="background: #FFFF00">Access</span> Token</a>.

 <p>
 Use <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleRefreshTokenRequest/GoogleCredential.html"><TT>GoogleCredential</TT></A> to access protected resources from the resource server using the
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleRefreshTokenRequest/TokenResponse.html"><TT>TokenResponse</TT></A> returned by <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleRefreshTokenRequest/.html#execute()"><TT>.execute()</TT></A>. On error, it will instead throw
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleRefreshTokenRequest/TokenResponseException.html"><TT>TokenResponseException</TT></A>.
 </p>

 <p>
 Sample usage:
 </p>

 <pre>
  static void refreshAccessToken() throws IOException {
    try {
      TokenResponse response =
          new GoogleRefreshTokenRequest(new NetHttpTransport(), new JacksonFactory(),
              "tGzv3JOkF0XG5Qx2TlKWIA", "s6BhdRkqt3", "7Fjfp0ZBr1KtDRbnfVdmIw").execute();
      System.out.println("Access token: " + response.getAccessToken());
    } catch (TokenResponseException e) {
      if (e.getDetails() != null) {
        System.err.println("Error: " + e.getDetails().getError());
        if (e.getDetails().getErrorDescription() != null) {
          System.err.println(e.getDetails().getErrorDescription());
        }
        if (e.getDetails().getErrorUri() != null) {
          System.err.println(e.getDetails().getErrorUri());
        }
      } else {
        System.err.println(e.getMessage());
      }
    }
  }
 </pre>

 <p>
 Implementation is not thread-safe.
 </p>

 @since 1.7
 @author Yaniv Inbar</blockquote>
<hr align="left" width="100%">
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse!class"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse.html" class="hiddenlink">Class <b>GoogleTokenResponse</b></a><br><br><blockquote>Google OAuth 2.0 JSON model for a successful access token response as specified in <a
 href="http://tools.ietf.org/html/rfc6749#section-5.1">Successful Response</a>,<strike>
</strike> including an <strike>ID</strike><span style="background: #FFFF00">ID
</span> token as specified in <strike>OpenID</strike><a href="http://openid.net/specs/openid-connect-session-1_0.html"><span style="background: #FFFF00">OpenID
</span> Connect Session <strike>Management
</strike><span style="background: #FFFF00">Management</span> 1.0</a>.

 <p>
 This response object is the result of <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/GoogleAuthorizationCodeTokenRequest.html#execute()"><TT>GoogleAuthorizationCodeTokenRequest.execute()</TT></A> and
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/GoogleRefreshTokenRequest.html#execute()"><TT>GoogleRefreshTokenRequest.execute()</TT></A>. Use <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/.html#parseIdToken()"><TT>.parseIdToken()</TT></A> to parse the
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/GoogleIdToken.html"><TT>GoogleIdToken</TT></A> and then <strike>call</strike><span style="background: #FFFF00">call
</span> <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/GoogleIdTokenVerifier.html#verify(GoogleIdToken)"><TT><strike>GoogleIdToken.verify(</strike>GoogleIdTokenVerifier<strike>) to verify
 it (or just call </strike>.<strike>verifyIdToken</strike><span style="background: #FFFF00">verify</span>(<strike>GoogleIdTokenVerifier</strike><span style="background: #FFFF00">GoogleIdToken</span>)</TT></A><strike>)</strike>.
 </p>

 <p>
 Implementation is not thread-safe.
 </p>

 <p><span style="background: #FFFF00">
 Upgrade warning: in prior version 1.13 this extended
 <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/com/google/api/client/auth/openidconnect/IdTokenResponse.html"><TT>com.google.api.client.auth.openidconnect.IdTokenResponse</TT></A>, but starting with version 1.14
 it now extends <A HREF="../Google API Client Library for Java 1.14.1-beta/com/google/api/client/googleapis/auth/oauth2/GoogleTokenResponse/TokenResponse.html"><TT>TokenResponse</TT></A>.
 </p>

 </span>@since 1.7
 @author Yaniv Inbar</blockquote>
<A NAME="com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse.dmethod.verifyIdToken(GoogleIdTokenVerifier)"></A><a href="com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse.html" class="hiddenlink">Class <b>GoogleTokenResponse</b></a>, <a href="com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse.html#com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse.verifyIdToken_changed(com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier)" class="hiddenlink">boolean <b>verifyIdToken(GoogleIdTokenVerifier)</b></a><br><br><blockquote>Verifies the ID token as specified in <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdTokenVerifier.html#verify"><TT>GoogleIdTokenVerifier.verify</TT></A> by passing it
 <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#parseIdToken"><TT>.parseIdToken</TT></A>.

 @param verifier Google ID token <strike>verifier</strike><span style="background: #FFFF00">verifier

 @deprecated (scheduled to be removed in 1.15) Use
             <A HREF="../Google API Client Library for Java 1.14.1-beta/GoogleIdTokenVerifier.html#verify(GoogleIdToken)"><TT>GoogleIdTokenVerifier.verify(GoogleIdToken)</TT></A> with <A HREF="../Google API Client Library for Java 1.14.1-beta/.html#parseIdToken()"><TT>.parseIdToken()</TT></A></span></blockquote>
<hr align="left" width="100%">

</BODY>
</HTML>
